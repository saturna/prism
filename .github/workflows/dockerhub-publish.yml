name: Build & Publish Docker image

on: 
  push:
    branches:
      - master
  release:
    types: [published]

env:
  IS_RELEASE: ${{github.event_name == 'release'}}

jobs:
  docker-publish:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - 
        name: Compute full release version tag
        if: env.IS_RELEASE == 'true'
        run: echo "TAG_FULL_VERSION=$(release='${{github.event.release.tag_name}}' && echo ${release:1})" >> $GITHUB_ENV
      - 
        name: Compute primary release version tag
        if: env.IS_RELEASE == 'true'
        run: echo "TAG_PRIMARY_VERSION=$(release='${{github.event.release.tag_name}}' && echo ${release:1:1})" >> $GITHUB_ENV
      -
        name: Build and Push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{(env.IS_RELEASE == 'true' && format('gruxer/prism:{0},gruxer/prism:{1},gruxer/prism:latest', env.TAG_FULL_VERSION, env.TAG_PRIMARY_VERSION)) || 'gruxer/prism:master'}}
          platforms: linux/amd64,linux/arm64
          build-args: BUILD_TYPE=production